{"ast":null,"code":"var _jsxFileName = \"/Users/yizhou/Desktop/WEB422Assignment2/react/myapp/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n/* { name, onLoginChange } */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserLogin(props) {\n  _s();\n\n  const history = useHistory();\n  const [warningUserSpace, setUserWarningSpace] = useState('');\n  const [warningPasswordSpace, setPasswordSpace] = useState('');\n  const [ValidUserName, setValidUserName] = useState(false);\n  const [ValidPassword, setPassword] = useState(false);\n  const [UserName, setUserName] = useState(\"\");\n  const [UserPassword, setUserPassword] = useState(\"\");\n  const [ValidInfo, setValidInfo] = useState({});\n  const [isLogged, setIslogged] = useState({\n    success: false,\n    user: \"\"\n  });\n  const [SpanColor, setSpanColor] = useState({\n    upperCase: false,\n    lowerCase: false,\n    isLength: false,\n    nonLetter: false\n  });\n\n  function submitForm(event) {\n    event.preventDefault();\n    console.log(ValidInfo);\n\n    if (!isEmpty(ValidInfo)) {\n      var requestOptions = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      };\n      console.log(requestOptions.body);\n      fetch('http://localhost:3333/login?userName=' + ValidInfo.ValiduserName + '&password=' + ValidInfo.ValidPassword, requestOptions).then(response => response.json()).then(user => {\n        console.log(user);\n\n        if (user.success == true) {\n          console.log('this is user name' + user.userName);\n          props.setStatus({\n            success: true,\n            user: user.userName\n          });\n          history.goBack();\n        } else {\n          setPasswordSpace('Your user name or password is wrong');\n          setUserName(\"\");\n          setUserPassword(\"\");\n        }\n      });\n    } else {\n      setPasswordSpace('Naughty User ！');\n    }\n  }\n\n  function isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n  }\n\n  useEffect(() => {\n    if (SpanColor.upperCase == true && SpanColor.lowerCase == true && SpanColor.isLength == true && SpanColor.nonLetter == true && ValidUserName == true) {\n      setValidInfo({\n        ValiduserName: UserName,\n        ValidPassword: UserPassword\n      });\n    } else {\n      setValidInfo({});\n    }\n\n    console.log('this is is logged' + isLogged.success);\n    console.log('this is is logged' + isLogged.user);\n\n    if (isLogged.success) {\n      history.goBack();\n    }\n  }, [SpanColor, UserName, isLogged, history]);\n\n  async function listenPassword(event) {\n    event.preventDefault();\n    var input = event.target.value;\n    var isUpper = SpanColor.upperCase;\n    var isLower = SpanColor.lowerCase;\n    var islength = SpanColor.isLength;\n    var isnonLetter = SpanColor.nonLetter;\n    /*        console.log(input) */\n\n    if (input.indexOf(\" \") == -1) {\n      setPasswordSpace('');\n    } else {\n      setPasswordSpace('Please make sure there is no white space on your password');\n      setPassword(false);\n      return;\n    }\n\n    if (input.length >= 8) {\n      islength = true;\n    } else {\n      islength = false;\n      setPassword(false);\n    }\n\n    if (input.match(new RegExp(\"[A-Z]\"))) {\n      isUpper = true;\n    } else {\n      isUpper = false;\n      setPassword(false);\n    }\n\n    if (input.match(new RegExp(\"[a-z]\"))) {\n      isLower = true;\n    } else {\n      isLower = false;\n      setPassword(false);\n    }\n\n    if (input.match(new RegExp(/\\d+/g)) || /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/.test(input)) {\n      console.log(isnonLetter);\n      isnonLetter = true;\n    } else {\n      isnonLetter = false;\n      setPassword(false);\n    }\n\n    setSpanColor({\n      upperCase: isUpper,\n      lowerCase: isLower,\n      isLength: islength,\n      nonLetter: isnonLetter\n    });\n    setUserPassword(input);\n  }\n\n  function listenUsername(event) {\n    event.preventDefault();\n    var input = event.target.value;\n\n    if (input.indexOf(\" \") == -1) {\n      setUserWarningSpace('');\n      setValidUserName(true);\n      setUserName(input);\n    } else {\n      setUserWarningSpace('Please make sure there is no white space on your user name');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shadow p-3 mb-5 bg-body rounded\",\n    style: {\n      marginTop: 30,\n      width: 500,\n      height: 450,\n      marginLeft: 450\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      style: {\n        marginTop: 50\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"User Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: UserName,\n          onChange: listenUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: warningUserSpace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: UserPassword,\n          onChange: listenPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: warningPasswordSpace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: SpanColor.upperCase ? \"green\" : \"grey\"\n          },\n          children: \"at least one uppercase letter: 'A', 'B'\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: SpanColor.lowerCase ? \"green\" : \"grey\"\n          },\n          children: \"at least one lowercase letter: 'a', 'b'\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: SpanColor.nonLetter ? \"green\" : \"grey\"\n          },\n          children: \"at least one non-letter character: '2', '3', '*'\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: SpanColor.isLength ? \"green\" : \"grey\"\n          },\n          children: \"password length should longer than 8 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          style: {\n            marginTop: 30\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserLogin, \"e/Im4YA5aSEYb/YZcDmgFcNzt6E=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserLogin\");","map":{"version":3,"sources":["/Users/yizhou/Desktop/WEB422Assignment2/react/myapp/src/Login.js"],"names":["React","useEffect","useState","useLocation","useHistory","UserLogin","props","history","warningUserSpace","setUserWarningSpace","warningPasswordSpace","setPasswordSpace","ValidUserName","setValidUserName","ValidPassword","setPassword","UserName","setUserName","UserPassword","setUserPassword","ValidInfo","setValidInfo","isLogged","setIslogged","success","user","SpanColor","setSpanColor","upperCase","lowerCase","isLength","nonLetter","submitForm","event","preventDefault","console","log","isEmpty","requestOptions","method","headers","body","fetch","ValiduserName","then","response","json","userName","setStatus","goBack","obj","Object","keys","length","listenPassword","input","target","value","isUpper","isLower","islength","isnonLetter","indexOf","match","RegExp","test","listenUsername","marginTop","width","height","marginLeft","color"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n\n\n/* { name, onLoginChange } */\nexport default function UserLogin(props) {\n    const history = useHistory()\n    const [warningUserSpace, setUserWarningSpace] = useState('');\n    const [warningPasswordSpace, setPasswordSpace] = useState('');\n    const [ValidUserName, setValidUserName] = useState(false);\n    const [ValidPassword, setPassword] = useState(false);\n    const [UserName, setUserName] = useState(\"\")\n    const [UserPassword, setUserPassword] = useState(\"\")\n    const [ValidInfo, setValidInfo] = useState({})\n    const [isLogged, setIslogged] = useState({\n        success: false,\n        user: \"\"\n    })\n    const [SpanColor, setSpanColor] = useState({\n        upperCase: false,\n        lowerCase: false,\n        isLength: false,\n        nonLetter: false\n    });\n    function submitForm(event) {\n        event.preventDefault();\n        console.log(ValidInfo)\n\n        if (!isEmpty(ValidInfo)) {\n            var requestOptions = {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            };\n            console.log(requestOptions.body)\n            fetch('http://localhost:3333/login?userName=' + ValidInfo.ValiduserName + '&password=' +ValidInfo.ValidPassword ,\n                requestOptions)\n                .then(response => response.json()).then(user => {\n                    console.log(user)\n                    if (user.success == true) {\n                      \n                        console.log('this is user name' + user.userName)\n\n                        props.setStatus({\n                            success: true,\n                            user: user.userName\n                        })\n                        history.goBack()\n                    } else {\n                        setPasswordSpace('Your user name or password is wrong')\n                        setUserName(\"\")\n                        setUserPassword(\"\")\n                    }\n                });\n        } else {\n            setPasswordSpace('Naughty User ！')\n        }\n\n\n    }\n    function isEmpty(obj) {\n        return Object.keys(obj).length === 0;\n    }\n    useEffect(() => {\n        if (SpanColor.upperCase == true && SpanColor.lowerCase == true && SpanColor.isLength == true && SpanColor.nonLetter == true && ValidUserName == true) {\n            setValidInfo({\n                ValiduserName: UserName,\n                ValidPassword: UserPassword\n            })\n        } else {\n            setValidInfo({})\n        }\n\n        console.log('this is is logged' + isLogged.success)\n        console.log('this is is logged' + isLogged.user)\n        if (isLogged.success) {\n            history.goBack()\n        }\n\n    }, [SpanColor, UserName, isLogged, history]);\n\n\n\n    async function listenPassword(event) {\n        event.preventDefault();\n        var input = event.target.value\n        var isUpper = SpanColor.upperCase\n        var isLower = SpanColor.lowerCase\n        var islength = SpanColor.isLength\n        var isnonLetter = SpanColor.nonLetter\n        /*        console.log(input) */\n        if (input.indexOf(\" \") == -1) {\n            setPasswordSpace('')\n        } else {\n            setPasswordSpace('Please make sure there is no white space on your password')\n            setPassword(false)\n            return\n        } if (input.length >= 8) {\n            islength = true;\n        } else {\n            islength = false;\n            setPassword(false)\n        }\n        if (input.match(new RegExp(\"[A-Z]\"))) {\n            isUpper = true\n\n        } else {\n            isUpper = false\n            setPassword(false)\n        }\n        if (input.match(new RegExp(\"[a-z]\"))) {\n            isLower = true\n        } else {\n            isLower = false\n            setPassword(false)\n        }\n        if (input.match(new RegExp(/\\d+/g)) || /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/.test(input)) {\n            console.log(isnonLetter)\n            isnonLetter = true\n        } else {\n            isnonLetter = false\n            setPassword(false)\n        }\n\n\n        setSpanColor({\n            upperCase: isUpper,\n            lowerCase: isLower,\n            isLength: islength,\n            nonLetter: isnonLetter\n        })\n        setUserPassword(input)\n\n    }\n    function listenUsername(event) {\n        event.preventDefault();\n        var input = event.target.value\n        if (input.indexOf(\" \") == -1) {\n            setUserWarningSpace('')\n            setValidUserName(true)\n            setUserName(input)\n\n        } else {\n\n            setUserWarningSpace('Please make sure there is no white space on your user name')\n        }\n\n    }\n\n    return (\n        <div className=\"shadow p-3 mb-5 bg-body rounded\" style={{\n            marginTop: 30,\n            width: 500,\n            height: 450,\n            marginLeft: 450\n\n\n\n        }}>\n\n            <div className=\"text-center\" style={{\n                marginTop: 50\n            }}>\n                <form onSubmit={submitForm}>\n\n                    <label className=\"form-label\">User Name</label>\n\n                    <br />\n                    <input type=\"text\" value={UserName} onChange={listenUsername} />\n                    <br />\n                    <span style={{\n                        color: \"red\"\n\n                    }} >{warningUserSpace}</span>\n                    <br />\n                    <label className=\"form-label\">Password</label>\n                    <br />\n                    <input type=\"password\" value={UserPassword} onChange={listenPassword} />\n                    <br />\n                    <span style={{\n                        color: \"red\"\n\n                    }} >{warningPasswordSpace}</span>\n                    <br />\n                    <span style={{\n                        color: SpanColor.upperCase ? \"green\" : \"grey\"\n                    }}>at least one uppercase letter: 'A', 'B'</span>\n                    <br />\n                    <span style={{\n                        color: SpanColor.lowerCase ? \"green\" : \"grey\"\n                    }}>at least one lowercase letter: 'a', 'b'</span>\n                    <br />\n                    <span style={{\n                        color: SpanColor.nonLetter ? \"green\" : \"grey\"\n                    }}>at least one non-letter character: '2', '3', '*'</span>\n                    <br />\n                    <span style={{\n                        color: SpanColor.isLength ? \"green\" : \"grey\"\n                    }}>password length should longer than 8 characters</span>\n                    <br />\n                    <button type=\"submit\" className=\"btn btn-primary\" style={{\n                        marginTop: 30\n                    }}>Submit</button>\n                </form>\n            </div>\n\n        </div>\n\n\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}